MORSE CODE
==========

A  .-       N  -.
B  -...     O  ---
C  -.-.     P  .--.
D  -..      Q  --.-
E  .        R  .-.
F  ..-.     S  ...
G  --.      T  -
H  ....     U  ..-
I  ..       V  ...-
J  .---     W  .--
K  -.-      X  -..-
L  .-..     Y  -.--
M  --       Z  --..


USABLE 74xx GATES
=================

ICM7555   timer

74HC193   4-bit binary up/down counter

[74HC393   2 x 4-bit binary counter] <-- can't get this one

74HC04    6 x NOT gate

74HC08    4 x 2-input AND gate
74HC11    3 x 3-input AND gate
74HC21    2 x 4-input AND gate

74HC32    4 x 2-input OR gate


EXAMPLE 1: "A"
==============

SYMBOL SEQUENCE

A = .- = -_---___

(length=8)


CLOCKED BIT SEQUENCE

CLK

000 *      ~a & ~b & ~c
001
010 *      ~a & b & ~c
011 *      ~a & b & c
100 *      a & ~b & ~c
101
110
111
cba


LOGIC EXPRESSION

(~a & ~b & ~c) |
(~a & b & ~c) |
(~a & b & c) |
(a & ~b & ~c)


SIMPLIFICATION

~a & b & ~c  \__ ~a & b
~a & b & c   /
~a & ~b & ~c \__ ~b & ~c
a & ~b & ~c  /


SIMPLIFIED LOGIC EXPRESSION

(~a & b) | (~b & ~c)


1 4-bit counter    (74193)
1 hex inverter     (7404)   [3/6 used]
1 4 x 2-input AND  (7408)   [2/4 used]
1 4 x 2-input OR   (7432)   [1/4 used]


EXAMPLE 2: "IAN"
================

SYMBOL SEQUENCE

I = ..  A = .-  N = -.  = -_-___-_---___---_-_____________

(length=32)


CLOCKED BIT SEQUENCE

CLK

00000 *   ~a & ~b & ~c & ~d & ~e
00001
00010 *   ~a & b & ~c & ~d & ~e
00011
00100
00101
00110 *   ~a & b & c & ~d & ~e
00111
01000 *   ~a & ~b & ~c & d & ~e
01001 *   a & ~b & ~c & d & ~e
01010 *   ~a & b & ~c & d & ~e
01011
01100
01101
01110 *   ~a & b & c & d & ~e
01111 *   a & b & c & d & ~e
10000 *   ~a & ~b & ~c & ~d & e
10001
10010 *   ~a & b & ~c & ~d & e
10011
10100
10101
10110
10111
11000
11001
11010
11011
11100
11101
11110
11111
edcba


LOGIC EXPRESSION

(~a & ~b & ~c & ~d & ~e) |
(~a & b & ~c & ~d & ~e) |
(~a & b & c & ~d & ~e) |
(~a & ~b & ~c & d & ~e) |
(a & ~b & ~c & d & ~e) |
(~a & b & ~c & d & ~e) |
(~a & b & c & d & ~e) |
(a & b & c & d & ~e) |
(~a & ~b & ~c & ~d & e) |
(~a & b & ~c & ~d & e)


ESPRESSO FORMAT

.i 5
.o 1
00000 1
00001 0
00010 1
00011 0
00100 0
00101 0
00110 1
00111 0
01000 1
01001 1
01010 1
01011 0
01100 0
01101 0
01110 1
01111 1
10000 1
10001 0
10010 1
10011 0
10100 0
10101 0
10110 0
10111 0
11000 0
11001 0
11010 0
11011 0
11100 0
11101 0
11110 0
11111 0


SIMPLIFIED ESPRESSO FORMAT

.i 5
.o 1
.p 4
0111- 1
-00-0 1
0100- 1
0--10 1
.e


SIMPLIFIED LOGIC EXPRESSION

0111-   b & c & d & ~e
-00-0   ~a & ~c & ~d
0100-   ~b & ~c & d & ~e
0--10   ~a & b & ~e

(      b &  c &  d & ~e) |   4
(~a &      ~c & ~d     ) |   3
(     ~b & ~c &  d & ~e) |   4
(~a &  b &           ~e)     3


2 4-bit counters  (74193)
1 hex inverter    (7404)  [5/6 used]
1 4 x 2-input OR  (7432)  [3/4 used]
1 2 x 4-input AND (7421)  [2/2 used]
1 3 x 3-input AND (7411)  [2/3 used]


EXAMPLE 3: "KICAD"
==================

SYMBOL SEQUENCE

K = -.-   I = ..   C = -.-.   A = .-   D = -..

---_-_---___-_-___---_-_---_-___-_---___---_-_-_________________

(length=64)


CLOCKED BIT SEQUENCE

CLK

000000 *   ~a & ~b & ~c & ~d & ~e & ~f
000001 *    a & ~b & ~c & ~d & ~e & ~f
000010 *   ~a &  b & ~c & ~d & ~e & ~f
000011
000100 *   ~a & ~b &  c & ~d & ~e & ~f
000101
000110 *   ~a &  b &  c & ~d & ~e & ~f
000111 *    a &  b &  c & ~d & ~e & ~f
001000 *   ~a & ~b & ~c &  d & ~e & ~f
001001
001010
001011
001100 *   ~a & ~b &  c &  d & ~e & ~f
001101
001110 *   ~a &  b &  c &  d & ~e & ~f
001111
010000
010001
010010 *   ~a &  b & ~c & ~d &  e & ~f
010011 *    a &  b & ~c & ~d &  e & ~f
010100 *   ~a & ~b &  c & ~d &  e & ~f
010101
010110 *   ~a &  b &  c & ~d &  e & ~f
010111
011000 *   ~a & ~b & ~c &  d &  e & ~f
011001 *    a & ~b & ~c &  d &  e & ~f
011010 *   ~a &  b & ~c &  d &  e & ~f
011011
011100 *   ~a & ~b &  c &  d &  e & ~f
011101
011110
011111
100000 *   ~a & ~b & ~c & ~d & ~e &  f
100001
100010 *   ~a &  b & ~c & ~d & ~e &  f
100011 *    a &  b & ~c & ~d & ~e &  f
100100 *   ~a & ~b &  c & ~d & ~e &  f
100101
100110
100111
101000 *   ~a & ~b & ~c &  d & ~e &  f
101001 *    a & ~b & ~c &  d & ~e &  f
101010 *   ~a &  b & ~c &  d & ~e &  f
101011
101100 *   ~a & ~b &  c &  d & ~e &  f
101101
101110 *   ~a &  b &  c &  d & ~e &  f
101111
110000
110001
110010
110011
110100
110101
110110
110111
111000
111001
111010
111011
111100
111101
111110
111111
fedcba


LOGIC EXPRESSION

(~a & ~b & ~c & ~d & ~e & ~f) |
( a & ~b & ~c & ~d & ~e & ~f) |
(~a &  b & ~c & ~d & ~e & ~f) |
(~a & ~b &  c & ~d & ~e & ~f) |
(~a &  b &  c & ~d & ~e & ~f) |
( a &  b &  c & ~d & ~e & ~f) |
(~a & ~b & ~c &  d & ~e & ~f) |
(~a & ~b &  c &  d & ~e & ~f) |
(~a &  b &  c &  d & ~e & ~f) |
(~a &  b & ~c & ~d &  e & ~f) |
( a &  b & ~c & ~d &  e & ~f) |
(~a & ~b &  c & ~d &  e & ~f) |
(~a &  b &  c & ~d &  e & ~f) |
(~a & ~b & ~c &  d &  e & ~f) |
( a & ~b & ~c &  d &  e & ~f) |
(~a &  b & ~c &  d &  e & ~f) |
(~a & ~b &  c &  d &  e & ~f) |
(~a & ~b & ~c & ~d & ~e &  f) |
(~a &  b & ~c & ~d & ~e &  f) |
( a &  b & ~c & ~d & ~e &  f) |
(~a & ~b &  c & ~d & ~e &  f) |
(~a & ~b & ~c &  d & ~e &  f) |
( a & ~b & ~c &  d & ~e &  f) |
(~a &  b & ~c &  d & ~e &  f) |
(~a & ~b &  c &  d & ~e &  f) |
(~a &  b &  c &  d & ~e &  f)


ESPRESSO FORMAT

.i 6
.o 1
000000 1
000001 1
000010 1
000011 0
000100 1
000101 0
000110 1
000111 1
001000 1
001001 0
001010 0
001011 0
001100 1
001101 0
001110 1
001111 0
010000 0
010001 0
010010 1
010011 1
010100 1
010101 0
010110 1
010111 0
011000 1
011001 1
011010 1
011011 0
011100 1
011101 0
011110 0
011111 0
100000 1
100001 0
100010 1
100011 1
100100 1
100101 0
100110 0
100111 0
101000 1
101001 1
101010 1
101011 0
101100 1
101101 0
101110 1
101111 0
110000 0
110001 0
110010 0
110011 0
110100 0
110101 0
110110 0
110111 0
111000 0
111001 0
111010 0
111011 0
111100 0
111101 0
111110 0
111111 0


SIMPLIFIED ESPRESSO FORMAT

.i 6
.o 1
.p 12
0--100 1
01-010 1
-011-0 1
101--0 1
0-0-10 1
01100- 1
01001- 1
10100- 1
10001- 1
00011- 1
00000- 1
-0--00 1
.e


SIMPLIFIED LOGIC EXPRESSION

0--100   ~a & ~b & c & ~f
01-010   ~a & b & ~c & e & ~f
-011-0   ~a & c & d & ~e
101--0   ~a & d & ~e & f
0-0-10   ~a & b & ~d & ~f
01100-   ~b & ~c & d & e & ~f
01001-   b & ~c & ~d & e & ~f
10100-   ~b & ~c & d & ~e & f
10001-   b & ~c & ~d & ~e & f
00011-   b & c & ~d & ~e & ~f
00000-   ~b & ~c & ~d & ~e & ~f
-0--00   ~a & ~b & ~e


(~a & ~b &  c &           ~f) |  4 X
(~a &  b & ~c &       e & ~f) |  5 X  5 = 4 + 2
(~a &       c &  d & ~e     ) |  4 X
(~a &            d & ~e &  f) |  4 X
(~a &  b &      ~d &      ~f) |  4 X
(     ~b & ~c &  d &  e & ~f) |  5 X  5 = 4 + 2
(      b & ~c & ~d &  e & ~f) |  5 X  5 = 4 + 2
(     ~b & ~c &  d & ~e &  f) |  5 X  5 = 4 + 2
(      b & ~c & ~d & ~e &  f) |  5 X  5 = 4 + 2
(      b &  c & ~d & ~e & ~f) |  5 X  5 = 4 + 2
(     ~b & ~c & ~d & ~e & ~f) |  5 X  5 = 4 + 2
(~a & ~b &           ~e     )    3 X  3 = 4 + TRUE

OR 12:

int1 = 1 | 2 | 3
int2 = 4 | 5 | 6
int3 = 7 | 8 | 9
int4 = 10 | 11 | 12

int5 = int1 | int2 | int3

result = int5 | int4 | FALSE

i1 = 1 | 2
i2 = 3 | 4
i3 = 5 | 6
i4 = 7 | 8
i5 = 9 | 10
i6 = 11 | 12

ii1 = i1 | i2
ii2 = i3 | i4
ii3 = i5 | i6

iii1 = ii1 | ii2

result = iii1 | ii3

==> 11 OR gates ==> 3 x 7432 quad 2-input OR gate

2 4-bit counters  (74193)
1 hex inverter    (7404)    [6/6 used]
6 2 x 4-input AND (7421)    [12/12 used]
2 4 x 2-input AND (7408)    [7/8 used]
3 4 x 2-input OR  (7432)    [11/12 used]


ALSO SEE kicad-multi.espresso FOR ONE LED PER LETTER VERSION
